version: '3.8'

services:
  server:
    # image: 'nginx:stable-alpine'
    build: 
      # context is where image will be build, therefore we need to set context to . here to be able to access nginx and src folders
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports: 
      - '8000:80'
    # volumes:
    #   - ./src:/var/www/html
    #   - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: 
      - php
      - mysql
  php:
    build: 
      context: .
      dockerfile: dockerfiles/php.dockerfile
    # volumes:
    #   # :delegated flag for optimization
    #   - './src:/var/www/html:delegated' 
  mysql:
    image: 'mysql:5.7'
    env_file: 
      - './env/mysql.env'
  composer:
  # docker-compose run --rm composer create-project --prefer-dist laravel/laravel .
    build: 
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - './src:/var/www/html' 
  artisan:
  # docker-compose run -rm artisan migrate
    build: 
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"] 
  npm:
    image: node
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html



    # run only specific services
    # docker-compose up server php mysql 

    # we can add depends_on to not list all containers 

    # add --build to rebuild images

    # docker-compose up -d --build server